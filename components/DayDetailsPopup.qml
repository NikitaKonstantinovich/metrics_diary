// Components/DayDetailsPopup.qml
import QtQuick
import QtQuick.Controls
import QtQuick.Layouts
import QtQuick.Effects
import Diary 1.0
import "."

Popup {
    id: popup
    modal: true
    focus: true
    closePolicy: Popup.CloseOnEscape

    // === –†–ê–ó–ú–´–¢–ò–ï –§–û–ù–ê ===
    // –æ–∂–∏–¥–∞–µ–º, —á—Ç–æ —Ä–æ–¥–∏—Ç–µ–ª—å –ø–µ—Ä–µ–¥–∞—Å—Ç –Ω–∞–º ref –Ω–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—å (–∏–ª–∏ –≤–µ—Å—å root),
    // –ª–∏–±–æ –ø—Ä–æ—Å—Ç–æ —Å—Ç–∞–≤–∏–º –ø–æ–¥–ª–æ–∂–∫—É —Å –∑–∞—Ç–µ–º–Ω–µ–Ω–∏–µ–º.
    property Item blurSource     // <- —Å—é–¥–∞ –∏–∑ –≤–Ω–µ: blurSource: calendarRoot
    Rectangle { anchors.fill: parent; color: "#00000080" } // –∑–∞—Ç–µ–º–Ω–µ–Ω–∏–µ
    // MultiEffect {
    //     anchors.fill: parent
    //     source: popup.blurSource
    //     blurEnabled: true
    //     blur: 0.6
    //     saturation: 1.0
    //     brightness: 1.0
    // }

    // === –î–ê–¢–ê, –î–õ–Ø –ö–û–¢–û–†–û–ô –û–¢–ö–†–´–¢–ê –ü–ê–ù–ï–õ–¨ ===
    property string currentDateIso: ""

    background: Rectangle {
        color: "#13131A"
        radius: 12
        border.color: "#2A2A35"
        anchors.margins: 48
    }

    contentItem: Item {
        anchors.fill: parent
        anchors.margins: 48

        // –∫–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
        ToolButton {
            anchors.top: parent.top
            anchors.right: parent.right
            text: "‚úñ"
            background: Rectangle { color: "#8B0000"; radius: 8 }
            onClicked: popup.close()
            Accessible.name: "Close day details"
        }

        // –î–≤–µ —Ä–∞–≤–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏
        RowLayout {
            anchors.fill: parent
            anchors.margins: 16
            spacing: 16

            // ====== –õ–ï–í–û: –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ò ======
            Frame {
                Layout.fillWidth: true
                Layout.fillHeight: true

                ColumnLayout {
                    anchors.fill: parent
                    anchors.margins: 12
                    spacing: 10

                    Label {
                        text: "Comments ‚Äî " + (popup.currentDateIso || "‚Äî")
                        font.bold: true
                        font.pixelSize: 16
                    }

                    // —Ä–µ–¥–∞–∫—Ç–æ—Ä + Save
                    RowLayout {
                        Layout.fillWidth: true

                        TextArea {
                            id: editor
                            Layout.fillWidth: true
                            Layout.preferredHeight: 90
                            placeholderText: "Write a comment‚Ä¶"
                            wrapMode: TextEdit.Wrap
                        }
                        Button {
                            text: "Save"
                            enabled: editor.text.length > 0 && popup.currentDateIso.length > 0
                            onClicked: {
                                notes.addNoteNow(editor.text)    // —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å —Ç–µ–∫—É—â–∏–º –≤—Ä–µ–º–µ–Ω–µ–º
                                editor.text = ""
                                list.positionViewAtBeginning()   // –Ω–æ–≤—ã–µ —Å–≤–µ—Ä—Ö—É ‚Äî –ø—Ä–æ–ª–∏—Å—Ç–∞–µ–º –∫ –Ω–∞—á–∞–ª—É
                            }
                        }
                    }

                    // —Å–ø–∏—Å–æ–∫ (–Ω–æ–≤—ã–µ —Å–≤–µ—Ä—Ö—É)
                    ListView {
                        id: list
                        Layout.fillWidth: true
                        Layout.fillHeight: true
                        clip: true
                        spacing: 6
                        model: notes

                        delegate: Rectangle {
                            width: ListView.view.width
                            radius: 8
                            color: "#1C1C25"
                            border.color: "#2E2E3A"
                            height: Math.max(48, textItem.paintedHeight + 20)

                            RowLayout {
                                anchors.fill: parent
                                anchors.margins: 10
                                spacing: 8

                                ColumnLayout {
                                    Layout.fillWidth: true
                                    spacing: 2
                                    Label {
                                        text: model.createdAtDisplay    // "hh:mm dd.MM"
                                        opacity: 0.7
                                        font.pixelSize: 12
                                    }
                                    Text {
                                        id: textItem
                                        text: model.text.length ? model.text : "(empty)"
                                        wrapMode: Text.Wrap
                                        Layout.fillWidth: true
                                    }
                                }

                                // –ö–æ—Ä–∑–∏–Ω–∞ —Å–ø—Ä–∞–≤–∞
                                ToolButton {
                                    text: "üóë"
                                    onClicked: confirmDelete.open(model.id)
                                    Accessible.name: "Delete comment"
                                }
                            }
                        }
                    }
                }
            }
            // ====== –ü–†–ê–í–û: –ú–ï–¢–†–ò–ö–ò (–ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞) ======
            Frame {
                Layout.fillWidth: true
                Layout.fillHeight: true
                Label {
                    anchors.centerIn: parent
                    text: "Metrics ‚Äî soon"
                    opacity: 0.5
                }
            }
        }
    }

    // –õ–æ–∫–∞–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å –¥–ª—è —ç—Ç–æ–π –ø–∞–Ω–µ–ª–∏
    NotesModel {
        id: notes
        currentDate: popup.currentDateIso
    }

    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è
    Dialog {
        id: confirmDelete
        modal: true
        property var _idToDelete: 0
        title: "Delete comment?"
        standardButtons: Dialog.Ok | Dialog.Cancel
        onAccepted: {
            if (_idToDelete) notes.deleteNote(_idToDelete)
            _idToDelete = 0
        }
        onRejected: _idToDelete = 0

        function open(id) {
            _idToDelete = id
            confirmDelete.open()
        }
        contentItem: Column {
            spacing: 8
            padding: 12
            Label { text: "Are you sure you want to delete this comment?" }
        }
    }
}



